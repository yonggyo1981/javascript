
1.함수의 정의 
function 함수명(.....) {
	// 함수에서 처리 영역 
	
	return 반환값
}

function sum(x) {
	const result = x * 2 + 2;
	
	return result;
}

2. 함수의 호출(실행)
함수명(); 
함수명(인수); 


3. 메모리
	1) 데이터 영역(data) - 작성한 소스 ...
	2) 스택영역(stack) - 함수가 호출되어 실행되는 메모리 
	3) 힙영역(heap) - 객체가 생성되는 메모리
	
4. 지역변수 / 전역변수
	지역 변수 - 함수 안에서 유효한 변수
	전역 변수 - 함수 안, 함수 밖에서 유효한 변수
	
	
	function sum() {
		const a = 1;
		const b = 2;
		
		return a + b;
	}
	
	sum 함수는 호출이 되어야 스택 영역 메모리에서 실행
	(호출이 안되면 실행 X)
	- 함수 안에 정의된 a,b 함수가 호출될때만 존재
	- 호출이 완료되면 스택에서 제거 -> a,b 동일하게 제거
	
	- a,b는 함수가 실행되는 동안에만 접근
	- 외부에서 접근 X - 함수 영역 안에서만 접근 
	- 지역변수
	
	
	모든 변수 - 스택 영역에서 존재(생성)
	
	
5. 1급 함수
	1) 인수를 함수로 사용 할 수 있다 
	
	2) 함수를 반환값으로 사용할 수 있다 
	
	(클로져)
	
6. 함수의 반환값 
   반환값이 없는 함수는 없지만.....
   반환값은 생략할 수 있다
   
   생략하게 되면 자동으로 return undefined; 추가가 된다
   
 7. 함수의 값이 반환
	-> 반환 이후의 실행은 중단
	

 8. 자바스크립트에서 함수 
	-> Function 생성자로 부터 생성된 인스턴스(객체 )
	-> 함수 객체
	
 9. 익명함수 
	익명함수 - 이름이 없는 함수 객체
	
	function sum() {
	
	}
	-> 함수 sum이 window 객체의 속성으로 끌어올림(hosting)이 된다
	-> 정의된 위치 관계없이 어디든지 호출
	
	const sum = function() {
	
	}
	-> 
	1) sum 변수가 선언 
	2) window 하위 속성으로 끌어올라 간다(hosting) -> const sum = undefined;
	3) function 객체가 생성
	4) sum 변수에 function 객체의 주소가 대입
	
 10. 가변인수
	함수내부에는 arguments 변수
		-> 인수로 넘어온 모든 값이 배열 형태로 담겨있다
		
	...인수 ->가변인수
	
	예)
	function glue(separator, ...data) {
		return data.join(separator);
	}