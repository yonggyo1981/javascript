Array 
	배열 생성자
	
	const a = 1;
	const b = 2;
	
	
	값을 여러개 담을때 쓰는 객체
	
	값을 담기 위해서는 배열 객체를 생성해야 한다.
	
	1. new 연산자를 통해서 생성
		생성자 인수로 값을 여러개 할당
		const a = new Array(1,2,3,4,5);
		
		인수 1개 - 값으로 인식하는것이 아니라 배열의 공간 갯수로 인식 (유의점)
		(인수가 1개 -> 반드시 숫자(양수),  음수, 문자 -> 오류)
		const a = new Array(3); -> 빈 공간 3개 
		
	2. 대괄호 연산자[]를 통해서 생성
		const a = [1,2,3,4,5];
		

	3. 배열은 각 요소의 순서 번호가 자동으로 생성이 된다
	
	4. 순서 번호에 따라 접근을 하려면 대괄호 -- 배열변수[순서번호]
	
	5. 배열 객체
		["apple", "mango", "orange"]  
		
		객체 구성 
		{
			속성 : 값, // 원시타입 + 객체 --> 다 담을 수 있다 --> 배열은 객체 -> 배열도 다 담을 수 있다
			속성 : 값,
		}
		
		["apple", "mango", "orange"]  
		{
			"0" : "apple", 
			"1" : "mango",
			"2" : "orange",
		}
		
		접근 대괄호 [순서 번호 - 인덱스 번호]로 접근
		
		배열 데이터를 변경
		- 이미 있는 인덱스 번호의 값에 대입을 하면 변경
		
		a[1] = "변경할값";
		a[2] = "변경할값";
		
		배열 데이터를 추가
		없는 인덱스에 값을 대입하면 추가
		a[3] = "추가할 값";
		
			- 배열 생성자에서 제공되는 메서드
				
				.push() - 배열의 끝에 추가 --> 현재의 배열 갯수 반환 
				.unshift() - 배열의 앞에 추가 --> 현재의 배열 갯수를 반환 
		
		
		배열 데이터를 삭제
		delete 배열변수[인덱스번호];
			
				- 배열 생성자에서 제공되는 메서드
					.pop() - 배열의 마지막 요소를 삭제 -> 제거된 요소를 반환
					.shift() - 배열의 첫번째 요소를 삭제 -> 제거된 요소를 반환
		
		
		배열의 값은 - 모든 데이터(객체 이므로)
		
		
		배열 생성자 
			속성 
				.length - 배열의 요소의 갯수
				const a = ["apple", "orange", "mango"];
				for (let i = 0; i < a.length; i++) {
					console.log(a[i]);
				}
				
				length 속성에 값을 대입하면? 
					배열의 공간의 갯수가 변경이 된다
					
				
			메서드
				.concat - 여러 배열객체를 하나로 합칠때 사용 
				.includes(요소) - 요소가 포함이 되어 있는지 체크
				.indexOf("요소명")  - 요소가 위치하고 있는 배열의 인덱스를 반환
										 - 요소를 찾지 못하면 -1을 반환
										 - 찾는 방향이 왼쪽 -> 오른쪽
									
				.lastIndexOf("요소명") - indexOf와 동일 -> 다만 찾는 방향이 오른쪽 -> 왼쪽 
				
				.join("구분자") -- 구분자로 배열 요소를 결합하여 문자열로 반환
								   -- 구분자의 기본값 콤마(,) 