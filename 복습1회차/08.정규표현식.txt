정규표현식
	RegExp 생성자
		/패턴/ -> new RegExp(... ) RegExp 인스턴스
			RegExp.prototype
						.test(패턴) -> 패턴의 일치 여부(true|false)
						.exec(패턴) -> 패턴에 일치하는 문자열 정보
			
			
		/abc/ -> abc라는 문자열이 포함되어 있는지 여부 
		[] -> 문자 클래스 -> 각각의 문자 
		[abc] -> a 또는 b 또는 c가 포함되어 있는지
		/[abcdefg....z]/ -> /[a-z]/
		/[01234...9]/ -> /[0-9]/
		
		[01234] -> 0, 1, 2, 3, 4 가 포함 
		/01234/ -> 01234가 포함 
		[^abc] -> a,b,c가 아닌 문자 
		/^abc/ -> abc로 시작하는 문자패턴
		/abc$/ -> abc로 끝나는 문자 패턴
		
		
		. -> (줄 개행문자 \n를 제외한)모든 문자 한개, ... -> 모든 문자 3개
		/[0-9]/ ->숫자 매칭 패턴   ---  \d -> /[\d]/
		/[^0-9]/ -> 숫자가 아닌 패턴 -- \D -> 숫자가 아닌 패턴 
		
		\s -> 공백 
		\S -> 공백이 아닌 모든 문자  
		
		\w -> 알파벳,숫자, _(언더스코어) 한개 
		\W -> 알파벳, 숫자, _(언더스코어)를 제외한 모든 문자 
		
		{} -> 반복 범위 
		문자{시작, 종료}
		문자{2,5}-> 문자가 2이상 5이하 반복
		문자{2,} -> 문자가 2이상 반복
		문자{,2} -> 문자가 2이하 반복 
		문자{숫자} -> 문자가 숫자만큼 반복
							문자{3} -> 문자 패턴이 3만큼 반복 
							
		문자? -> 문자{0,1} -> 문자를 1번 이하 반복(문자가 있어도 되고 없어도 되고)
		문자* -> 문자{0,} -> 문자를 0번 이상 반복(있어도 되고 없어도 되고, 여러개도 가능)
		문자1|문자2|문자3 -> 문자1 또는 문자2 또는 문자3 
		