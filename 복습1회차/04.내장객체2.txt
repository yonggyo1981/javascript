04. 내장객체
String

Array

Math
   .abs() -> 절대값 음수 -> 양수
   .round() -> 반올림
   .ceil() -> 올림
   .floor() -> 버림
   .max() -> 최대값 
   .min() -> 최소값
   .sign() -> 음수 -> -1, 양수 -> 1, 0 - 0
   .random() -> 0이상 1미만의 수 
   .sqrt()
 	
Number 
	-> Number(....) -> 문자열 -> 숫자 변경
	.NaN -> (Not a Number) -> 숫자가 아닐 경우 // isNaN(..) -> 숫자가 아니면 true | false 
	.isNaN(...) -> 숫자가 아닌지 여부 체크, 숫자가 아니면 true -> 전역 함수 isNaN(...)
					"1234" -> false -> Number("1234") -> Number.isNaN
	.parseFloat(..) -> 실수로 변경  // parseFloat(...)
	.parseInt(...) -> 정수로 변경  // parseInt(...)
	.toFixed(..) -> 고정 소수점으로 문자열 숫자 표기 
	.toLocaleString() -> 지역(국가)에 맞는 수치 표기법으로 변환  1000 -> 1,000
	
	
Boolean
	-> Boolean(...) -> 문자열을 논리값으로 평가
					false로 인식하는 조건 
						0, "", null, undefined
							
					참고) 
							[] -> true, {} -> true  -> 참조변수.특정 속성 -> undefined 
							(...lengtn > 0 )


Date
	-> 생성자 -> 인스턴스 생성 시점의 날짜와 시간
			생성자 매개변수로 년도, 월, 일, 시, 분, 초 
			 -> 문자열 형태의 시간 -> 특정 시간대의 Date 인스턴스가 만들어진다
			 ->  Date 인스턴스 
			 
	prototype.		
		.getFullYear() -> 년도 예) 2021
		.getMonth() -> 월 0~11, 실제 출력시에는 +1
		.getDate() -> 일1~31
		.getDay() -> 요일 -> 0~6 // 0 - 일요일, 1 - 월요일 .... 6 - 토요일 
		.getHours() -> 시 
		.getMinutes() -> 분
		.getSeconds() -> 초 
		
		
		.getTime() -> 1970.1.1 자정부터 현재까지 천분의 1초 단위로 카운팅한 정수 // php - time() -> 초단위	
						(Java Date - getTime(), System.currentTimeMills())
						
		.toLocaleString()  -> 지역에 맞는 시간 표기법으로 변환 출력 
		
	.now() == Date.prototype.getTime();
	
Map  - key - value 쌍 (제네레이터 )
	new Map(초기값 -> 배열)
	new Map([
		[키, 값],
		[키, 값],
		...
	]);
	
	.size - 요소의 개수 
	
	prototype 
		.set(키, 값); // java - put
	    .get(키)
		.delete(key); // java - remove 
		.has(key); // java - containsKey
        .clear();
        .keys() -> // java - keySet()		
		.values() -> // java - 
		.entries() -> key, value 쌍으로 조회 -> // java  entrySet() Set<Map.Entry>
		.forEach()
		for ... of ...
		
Set - 집합 자료형
	new Set(["값1", "값2", "값3"]);
	.prototype 
		.add("값");
        .has("값");
		.delete("값");
		.entries();
		.forEach  - function(value, value, thisArg) 
		.values();

