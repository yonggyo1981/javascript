Error 생성자 - 보완
	- 상속을 통해서 사용자 정의 에러
	
String 생성자
let a = "abc"; // 기본자료형 
		a. -> String 생성자에 정의되어 있는 메서드 사용 가능 
			-> new String(a) -> 메서드 호출 -> 원래 기본 자료형으로 복구 

	String.prototype
			- concat(s1, s2, s3 ....) -> 문자열 결합
			- endsWith(s) -> s로 문자열이 끝나는지 체크 
            - startsWith(s) -> s로 문자열이 시작하는지 체크 
		    - includes(s) -> s가 포함되어 있는지 여부(true, false)
			- indexOf(s) -> s가 왼쪽부터 시작하는 위치, s를 찾지 못하는 경우 -1
			- lastIndexOf(s) -> s가 오른쪽부터 시작하는 위치, s를 찾지 못하는 경우 -1
			- match(regexp 인스턴스) -> 정규표현식 체크 -> true, false
					RegExp ->  /표현식/ -> RegExp 인스턴스
						.test 
						.exec
			- matchAll(regExp 인스턴스)
			- repeat(n) -> 문자열을 n 만큼 반복
			- replace("찾을 문자열", "변경할 문자열") 
					-> 처음 매칭되는 문자열 한 부분만 치환 
					-> 전체 치환 -> 정규표현식의 g(global) flag 사용 
																	
			- slice() -> 특정 위치 문자열을 지정된 길이만큼 잘라서 반환 
			- split(d) -> d 구분값으로 문자열 -> 배열로 변환 
							apple,mango,banana -> , -> ["apple", "mango", "banana"]
								-> 배열을 -> 문자열로 결합 
									 Array.prototype.join
			- substring(s, e) -> 특정 문자열 위치에서 특정 길이만큼 잘라낼때 사용
										s 이상  e 미만 
										substring(1,5) -> 1,2,3,4
			- toLowerCase() -> 문자열을 소문자로 변환
			- toUpperCase() -> 문자열을 대문자로 변환 
			- trim() -> 문자열 앞,뒤의 공백을 제거할때 사용 
			
Array 생성자
	- 자바스크립트에서 배열 -> 배열 객체 -> 유사 배열
	- length -> 요소의 개수 
	
	Array.prototype 
				.concat(...a); -> 배열 객체의 결합 
				.filter(function(el, index, thisArg) { }) --> 테스트에 통과한 배열 요소만 반환 
				.find(function(el, index, thisArg) { }) -> 테스트에 통과한 첫번재 요소만 반환 
				.forEach(function(el, index, thisArg) { }) --> 요소를 반복 순회...
			    .includes(..) -> 특정 요소가 포함되어 있는지 여부(true|false)
				.indexOf(..) -> 특정 요소를 검색해서 요소가 있는 왼쪽 첫번째 위치의 인덱스 번호를 반환, 못찾으면 -1을 반환 
				.lastIndexOf(..) -> 특정 요소를 오른쪽 부터 찾아서 인덱스 번호 반환, 못찾으면 -1
				.join(...)  	--> 배열객체 -> 문자열로 결합  // PHP -> implode()
							--> String.prototype.split(구분값) -> 문자열 -> 배열객체 
									// PHP -> explode()
				.keys()  --> 인덱스 번호 배열 
				.map(function(el, index, thisArg) { }) -> 요소를 변경해서 반환
				.pop() -> 배열의 마지막 요소를 제거, 제거한 요소를 반환 
				.shift() -> 배열의 첫번째 요소를 제거, 제거한 요소를 반환 
				.push(...a) -> 배열의 마지막 요소에 추가  //
				.unshift(...a) -> 배열의 첫번째 요소에 추가 
				.reduce(....)
				.reverse() -> 배열의 순서를 반대로 변경 
				.slice() -> 배열을 잘라서 새로운 배열로 반환 
							(배열을 (깊은)복사할 때 ...)
				.splice(...) -> 배열의 중간위치에 추가, 삭제 
				
	Array.isArray -> 배열 생성자로부터 생성된 인스턴스인지 체크
				instanceof 
				a instanceof Array 
				
	Math 
		- round() -> 반올림
		- ceil() -> 올림
		- floor() -> 버림 
		
		- max() -> 최대값
		- min() -> 최소값
		- random() 0 이상 1 미만의 수 범위 난수
		- sign() -> 음수 -> -1, 양수 -> 1, 0 - 0
				
