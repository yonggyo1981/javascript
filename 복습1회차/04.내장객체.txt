Error 생성자 - 보완
	- 상속을 통해서 사용자 정의 에러
	
String 생성자
let a = "abc"; // 기본자료형 
		a. -> String 생성자에 정의되어 있는 메서드 사용 가능 
			-> new String(a) -> 메서드 호출 -> 원래 기본 자료형으로 복구 

	String.prototype
			- concat(s1, s2, s3 ....) -> 문자열 결합
			- endsWith(s) -> s로 문자열이 끝나는지 체크 
            - startsWith(s) -> s로 문자열이 시작하는지 체크 
		    - includes(s) -> s가 포함되어 있는지 여부(true, false)
			- indexOf(s) -> s가 왼쪽부터 시작하는 위치, s를 찾지 못하는 경우 -1
			- lastIndexOf(s) -> s가 오른쪽부터 시작하는 위치, s를 찾지 못하는 경우 -1
			- match(regexp 인스턴스) -> 정규표현식 체크 -> true, false
					RegExp ->  /표현식/ -> RegExp 인스턴스
						.test 
						.exec
			- matchAll(regExp 인스턴스)
			- repeat(n) -> 문자열을 n 만큼 반복
			- replace("찾을 문자열", "변경할 문자열") 
					-> 처음 매칭되는 문자열 한 부분만 치환 
					-> 전체 치환 -> 정규표현식의 g(global) flag 사용 
																	
			- slice() -> 특정 위치 문자열을 지정된 길이만큼 잘라서 반환 
			- split(d) -> d 구분값으로 문자열 -> 배열로 변환 
							apple,mango,banana -> , -> ["apple", "mango", "banana"]
								-> 배열을 -> 문자열로 결합 
									 Array.prototype.join
			- substring(s, e) -> 특정 문자열 위치에서 특정 길이만큼 잘라낼때 사용
										s 이상  e 미만 
										substring(1,5) -> 1,2,3,4
			- toLowerCase() -> 문자열을 소문자로 변환
			- toUpperCase() -> 문자열을 대문자로 변환 
			
Array 생성자
			

